<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eloancn.architect.dao.NameDao">

	<resultMap id="NameResultMap" type="Name">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="DECIMAL"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<sql id="Name_Column_List">
	    <![CDATA[
        	id,
        	name,
        	sex,
        	create_date,
        	update_date
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Name">  
        INSERT INTO el_name 
		<trim prefix="(" suffix=")" suffixOverrides="," >  	
            <if test="id != null" >
        		id ,
        	</if>       	 
            <if test="name != null" >
        		name ,
        	</if>       	 
            <if test="sex != null" >
        		sex ,
        	</if>       	 
            <if test="createDate != null" >
        		create_date ,
        	</if>       	 
            <if test="updateDate != null" >
        		update_date 
        	</if>       	 
    	</trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
        	<if test="id != null" >
        		#{id,jdbcType=INTEGER} ,
        	</if>
        	<if test="name != null" >
        		#{name,jdbcType=VARCHAR} ,
        	</if>
        	<if test="sex != null" >
        		#{sex,jdbcType=DECIMAL} ,
        	</if>
        	<if test="createDate != null" >
        		#{createDate,jdbcType=TIMESTAMP} ,
        	</if>
        	<if test="updateDate != null" >
        		#{updateDate,jdbcType=TIMESTAMP} 
        	</if>
   		 </trim>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" parameterType="Name">
        UPDATE el_name 
		<set >     
	        <if test="name != null" >
	       		name = #{name,jdbcType=VARCHAR} ,
	        </if>
	        <if test="sex != null" >
	       		sex = #{sex,jdbcType=DECIMAL} ,
	        </if>
	        <if test="createDate != null" >
	       		create_date = #{createDate,jdbcType=TIMESTAMP} ,
	        </if>
	        <if test="updateDate != null" >
	       		update_date = #{updateDate,jdbcType=TIMESTAMP} 
	        </if>
    	</set>
        WHERE 
	        id = #{id,jdbcType=INTEGER} 
   
	</update>
	<delete id="delete" parameterType="java.lang.Long">
        DELETE FROM el_name WHERE
        id = #{id,jdbcType=INTEGER} 
    </delete>   
    <select id="get" resultMap="NameResultMap" parameterType="java.lang.Long">
		SELECT <include refid="Name_Column_List" />
		    FROM el_name 
	        WHERE 
		        id = #{id,jdbcType=INTEGER} 
	</select>		
	<sql id="searchWhere">
		<where>	      				
	       <if test="id!=null">
				AND id = #{id,jdbcType=INTEGER}
			</if>
	       <if test="name!=null">
				AND name = #{name,jdbcType=VARCHAR}
			</if>
	       <if test="sex!=null">
				AND sex = #{sex,jdbcType=DECIMAL}
			</if>
	       <if test="createDateBegin!=null">
				AND create_date >= #{createDateBegin,jdbcType=TIMESTAMP}
		   </if>
		   <if test="createDateEnd!=null">
				AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}
		   </if>
	       <if test="updateDateBegin!=null">
				AND update_date >= #{updateDateBegin,jdbcType=TIMESTAMP}
		   </if>
		   <if test="updateDateEnd!=null">
				AND update_date &lt;= #{updateDateEnd,jdbcType=TIMESTAMP}
		   </if>
		</where>
	</sql>
    <select id="search" resultMap="NameResultMap">
    	SELECT <include refid="Name_Column_List" />
	    FROM el_name 
		<include refid="searchWhere"/>
    </select>	
	
	<select id="list" resultMap="NameResultMap">
    	SELECT <include refid="Name_Column_List" />
	    FROM el_name 
		<include refid="searchWhere"/>
    </select>	

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO el_name
		<trim prefix="(" suffix=")" suffixOverrides="," >
				name ,
				sex ,
				create_date ,
				update_date 
		</trim>
		values
		<foreach collection="list" item="item" index="index" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides="," >
					 #{item.name,jdbcType=VARCHAR} ,
					 #{item.sex,jdbcType=DECIMAL} ,
					 #{item.createDate,jdbcType=TIMESTAMP} ,
					 #{item.updateDate,jdbcType=TIMESTAMP} 
			</trim>
		</foreach>
	</insert>

	<update id="updateBatch" parameterType="java.util.List" >
		UPDATE el_name
		<trim prefix="set" suffixOverrides=",">
				<trim prefix="name =case" suffix="end,">
					<foreach collection="list" item="item" index="index">
						when id=#{item.id} then #{item.name}
					</foreach>
				</trim>
				<trim prefix="sex =case" suffix="end,">
					<foreach collection="list" item="item" index="index">
						when id=#{item.id} then #{item.sex}
					</foreach>
				</trim>
				<trim prefix="create_date =case" suffix="end,">
					<foreach collection="list" item="item" index="index">
						when id=#{item.id} then #{item.createDate}
					</foreach>
				</trim>
				<trim prefix="update_date =case" suffix="end,">
					<foreach collection="list" item="item" index="index">
						when id=#{item.id} then #{item.updateDate}
					</foreach>
				</trim>
		</trim>
		where
		<foreach collection="list" separator="or" item="item" index="index" >
			id=#{item.id}
		</foreach>

	</update>

</mapper>

